hidden=[
  ".config", ".github", ".gitignore", ".prettierrc", "quick-start", "react-chat", 
  "feathers-chat-ts/node_modules", "react-chat/node_modules",  "quick-start/node_modules"
]

run = """
cd feathers-chat-ts
npm run dev
""" # """

compile = """ # Runs before debug too. Lacks custom env vars.
SECONDS=0
FEATHERS_DIR="feathers-chat-ts"
FEATHERS_ORIGIN="https://${REPL_SLUG,,}.${REPL_OWNER,,}.repl.co"
clear
echo [compile]

if [ ! -d "$FEATHERS_DIR/node_modules" ]; then
  cd $FEATHERS_DIR
  npm i &> /dev/null
  
  # For TS clients
  # npm run compile # Drastically faster dev cold boot without
  # npm run bundle:client # Generates .tgz types for loading into TS clients
  cd -
fi
PERF1=$SECONDS

# Sets up the tables, login will not work without this!
if [ ! -f "$FEATHERS_DIR/feathers-chat.sqlite" ]; then
  sh -c "cd '$FEATHERS_DIR'; npm run migrate"
fi
PERF2=$(($SECONDS - $PERF1))

# Helper script to deal with lack of CWD support in the Debugger
mkdir -p .config
if [ ! -f "./.config/replit.mjs" ]; then
cat << EOF > ./.config/replit.mjs
if (process.env.FEATHERS_DIR) {
  process.chdir(process.env.FEATHERS_DIR)
}
EOF
fi

rm tsconfig.json 2> /dev/null || : # Cleanup upstream debris

if [ ! -f "./.config/bashrc" ]; then
cat << EOF > ./.config/bashrc
#!/bin/bash
echo Node version: "\\$(node --version)"
EOF
fi

# Append origin for OAuth. Alternatively, set it as an env var
CONFIG_FILE="$FEATHERS_DIR/config/default.json"
if ! grep -q "$FEATHERS_ORIGIN" "$CONFIG_FILE"; then
  sed -i "/\\"origins\\"/a \\    \\"$FEATHERS_ORIGIN\\"," "$CONFIG_FILE"
fi

INDEX_TS="$FEATHERS_DIR/src/index.ts"
if ! grep -q "console.time" "$INDEX_TS"; then
  sed -i "/Feathers app listening on /a \\
    \\  logger.info(\\`Remote: \\${process.env.FEATHERS_ORIGIN?.toLowerCase()}\\`)\\n\\
  console.timeEnd('App startup time')" "$INDEX_TS"
  
  sed -i "1i console.time('App startup time')" "$INDEX_TS"
  clear
  echo "[compile] took ${SECONDS}s. ($PERF1 + $PERF2)"
else
  clear
fi
""" # """


[[hints]]
regex = "Error: listen EADDRINUSE: address already in use"
message = "Try closing all web clients before running from the debugger or the shell."


# Ports
# ==============================
# https://docs.replit.com/programming-ide/configuring-repl#ports
# If you use an undefined port, your container may crash!

# Server port
[[ports]]
localPort = 3030
externalPort = 80

# Server's test env port
[[ports]]
localPort = 8998
externalPort = 8998

# Server debugging port
[[ports]]
localPort = 9000
externalPort = 9000

# React client
[[ports]]
localPort = 3000
externalPort = 3000

[nix]
channel = "stable-22_11"

[env]
FEATHERS_DIR = "feathers-chat-ts"
PATH = "/home/runner/$REPL_SLUG/.config/npm/node_global/bin:/home/runner/$REPL_SLUG/node_modules/.bin:/home/runner/$REPL_SLUG/$FEATHERS_DIR/node_modules/.bin"
EDITOR = "replit-git-editor"
npm_config_prefix = "/home/runner/$REPL_SLUG/.config/npm/node_global"
HOSTNAME = "0.0.0.0"
FEATHERS_ORIGIN = "https://${REPL_SLUG}.${REPL_OWNER}.repl.co"
NODE_OPTIONS = "--max_old_space_size=384"

# Enables Secrets and Auth, without the Replit packager
[packager]
language = "bash"

[languages.typescript]
pattern = "**/{*.ts,*.js,*.tsx,*.jsx}"
syntax = "typescript"
 
  [languages.typescript.languageServer]
  start = [ "typescript-language-server", "--stdio" ]

[debugger]
support = true

  [debugger.interactive]
  transport = "localhost:0"
  startCommand = [ "dap-node" ]

    [debugger.interactive.initializeMessage]
    command = "initialize"
    type = "request"

      [debugger.interactive.initializeMessage.arguments]
      clientID = "replit"
      clientName = "replit.com"
      columnsStartAt1 = true
      linesStartAt1 = true
      locale = "en-us"
      pathFormat = "path"
      supportsInvalidatedEvent = true
      supportsProgressReporting = true
      supportsRunInTerminalRequest = true
      supportsVariablePaging = true
      supportsVariableType = true

    [debugger.interactive.launchMessage]
    command = "launch"
    type = "request"
    
      [debugger.interactive.launchMessage.arguments]
      runtimeArgs = [
        "--import", "./.config/replit.mjs",
        "--loader", "./feathers-chat-ts/node_modules/ts-node/esm/transpile-only.mjs"
      ]
      args = []
      console = "externalTerminal"
      cwd = "."
      environment = []
      pauseForSourceMap = false
      program = "feathers-chat-ts/src/index.ts"
      request = "launch"
      sourceMaps = true
      stopOnEntry = false
      type = "pwa-node"

      [debugger.interactive.launchMessage.arguments.env]
      PORT = 9000

